MERGE INTO results.alerts USING (

  SELECT ANY_VALUE(alert) AS alert
       , SUM(counter) AS counter
       , MIN(alert_time) AS alert_time
       , MIN(event_time) AS event_time

  FROM (

    SELECT alert, alert_time, event_time, counter
    FROM results.alerts
    WHERE event_time BETWEEN {from_time_sql} AND {to_time_sql}
      AND alert:QUERY_NAME = '{query_name}'

    UNION ALL

    SELECT OBJECT_CONSTRUCT(
             'ALERT_ID', UUID_STRING(),
             'QUERY_NAME', '{query_name}',
             'QUERY_ID', IFNULL(QUERY_ID, PARSE_JSON('null')),
             'ENVIRONMENT', IFNULL(ENVIRONMENT, PARSE_JSON('null')),
             'SOURCES', IFNULL(SOURCES, PARSE_JSON('null')),
             'ACTOR', IFNULL(ACTOR, PARSE_JSON('null')),
             'OBJECT', IFNULL(OBJECT, PARSE_JSON('null')),
             'ACTION', IFNULL(ACTION, PARSE_JSON('null')),
             'TITLE', IFNULL(TITLE, PARSE_JSON('null')),
             'EVENT_TIME', IFNULL(EVENT_TIME, PARSE_JSON('null')),
             'ALERT_TIME', IFNULL(ALERT_TIME, PARSE_JSON('null')),
             'DESCRIPTION', IFNULL(DESCRIPTION, PARSE_JSON('null')),
             'DETECTOR', IFNULL(DETECTOR, PARSE_JSON('null')),
             'EVENT_DATA', IFNULL(EVENT_DATA, PARSE_JSON('null')),
             'SEVERITY', IFNULL(SEVERITY, PARSE_JSON('null')),
             'HANDLERS', IFNULL(OBJECT_CONSTRUCT(*):HANDLERS, PARSE_JSON('null'))
           ) AS alert
         , alert_time
         , event_time
         , 1 AS counter
    FROM rules.{query_name}
    WHERE event_time BETWEEN {from_time_sql} AND {to_time_sql}

  )
  GROUP BY alert:OBJECT, alert:DESCRIPTION

) new
ON results.alerts.alert = new.alert

WHEN MATCHED
THEN UPDATE SET counter = new.counter

WHEN NOT MATCHED
THEN INSERT (alert, counter, alert_time, event_time)
     VALUES (new.alert, new.counter, new.alert_time, new.event_time)
;
